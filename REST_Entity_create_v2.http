
@APPLICATION_ID=DM1
@LCA=LCA_001
@APPLICATION=EQ-Trading
@OWNER=T4711
@BASE_URI=http://localhost:21000



### create classification super class "Application"
POST {{BASE_URI}}/api/atlas/v2/types/typedefs HTTP/1.1
content-type: application/json
Authorization: Basic admin:admin

{
  "classificationDefs": [
    {
      "category": "CLASSIFICATION",
      "name": "Application",
      "typeVersion": "1.0",
      "attributeDefs": [],
      "superTypes": []
    }
  ]
  }


### create sub-class for a SWID in "Application"
POST {{BASE_URI}}/api/atlas/v2/types/typedefs HTTP/1.1
content-type: application/json
Authorization: Basic admin:admin

{
  "classificationDefs": [
    {
      "category": "CLASSIFICATION",
      "name": "{{APPLICATION_ID}}",
      "typeVersion": "1.0",
      "attributeDefs": [],
      "superTypes": ["Application"]
    }
  ]
}


### create classification super class "LegalEntityContext" and add in the same request also sub-class for the individual legal entities to it
POST {{BASE_URI}}/api/atlas/v2/types/typedefs HTTP/1.1
content-type: application/json
Authorization: Basic admin:admin

{
  "classificationDefs": [
    {
      "category": "CLASSIFICATION",
      "name": "LegalEntityContext",
      "typeVersion": "1.0",
      "attributeDefs": [],
      "superTypes": []
    },
    {
      "category": "CLASSIFICATION",
      "name": "LCA_001",
      "typeVersion": "1.0",
      "attributeDefs": [],
      "superTypes": ["LegalEntityContext"]
    },
    {
      "category": "CLASSIFICATION",
      "name": "LCA_019",
      "typeVersion": "1.0",
      "attributeDefs": [],
      "superTypes": ["LegalEntityContext"]
    }
  ]
}

### create entity for "File on NFS (fs_path)"
POST {{BASE_URI}}/api/atlas/v2/entity HTTP/1.1
content-type: application/json
Authorization: Basic admin:admin

{"entity":
    {
      "typeName": "fs_path",
      "createdBy": "ingestors_{{APPLICATION_ID}}_{{OWNER}}",
      "classifications": [{ "propagate" : false, "typeName": "{{APPLICATION_ID}}" }, {"propagate" : false, "typeName": "{{LCA}}" }],
      "customAttributes": {"property1": "customAttributes1", "property2": "customAttributes2"},
      "labels": ["raw_data"],
      "relationshipAttributes":{"belongsTo":{"swid1"}},
      "attributes": {
        "name": "{{APPLICATION}}_corebanking",
        "description": "Dataset {{APPLICATION_ID}}-{{APPLICATION}}_corebanking.csv is stored in hdfs:/data/corebanking/{{APPLICATION_ID}}",
        "qualifiedName": "hdfs:/data/corebanking/{{APPLICATION_ID}}/{{APPLICATION_ID}}-{{APPLICATION}}_corebanking.csv@prod",
        "path": "hdfs:/data/corebanking/{{APPLICATION_ID}}",
        "owner": "{{OWNER}}",
        "isFile": "true"
      }
    }
 }


### create entity for "File on HDFS (hdfs_path)"
POST {{BASE_URI}}/api/atlas/v2/entity/bulk HTTP/1.1
content-type: application/json
Authorization: Basic admin:admin

{"entities": [
    {
      "typeName": "hdfs_path",
      "createdBy": "ingestors_{{APPLICATION_ID}}_{{OWNER}}",
      "classifications": [{ "propagate" : false, "attributes": {"belongsTo": "swid"}, "typeName": "{{APPLICATION_ID}}" }, {"propagate" : false, "typeName": "{{LCA}}" }],
      "customAttributes": {"property1": "customAttributes1", "property2": "customAttributes2"},
      "labels": ["golden_data"],
      "attributes": {
        "name": "{{APPLICATION}}_corebanking1",
        "description": "Dataset {{APPLICATION_ID}}-{{APPLICATION}}_corebanking.csv is stored in hdfs:/data/corebanking/{{APPLICATION_ID}}",
        "qualifiedName": "hdfs:/data/corebanking/{{APPLICATION_ID}}/{{APPLICATION_ID}}-{{APPLICATION}}_corebanking.csv@prod",
        "path": "hdfs:/data/corebanking/{{APPLICATION_ID}}",
        "owner": "{{OWNER}}",
        "isFile": "true"
      }
    }
  ]
}


### create classification super class "data_processing" and add in the same request also sub-class for the individual tasks to it
POST {{BASE_URI}}/api/atlas/v2/types/typedefs HTTP/1.1
content-type: application/json
Authorization: Basic admin:admin

{
  "classificationDefs": [
    {
      "category": "CLASSIFICATION",
      "name": "data_processing",
      "typeVersion": "1.0",
      "attributeDefs": [],
      "superTypes": []
    },
    {
      "category": "CLASSIFICATION",
      "name": "etl_db_load",
      "typeVersion": "1.0",
      "attributeDefs": [],
      "superTypes": ["data_processing"]
    },
    {
      "category": "CLASSIFICATION",
      "name": "etl_quality_assurance",
      "typeVersion": "1.0",
      "attributeDefs": [],
      "superTypes": ["data_processing"]
    },
    {
      "category": "CLASSIFICATION",
      "name": "etl_copy",
      "typeVersion": "1.0",
      "attributeDefs": [],
      "superTypes": ["data_processing"]
    },
    {
      "category": "CLASSIFICATION",
      "name": "etl_data_profiler",
      "typeVersion": "1.0",
      "attributeDefs": [],
      "superTypes": ["data_processing"]
    }
  ],
  "entityDefs": [
    {
      "superTypes": ["Process"],
      "serviceType": "3party",
      "category": "ENTITY",
      "name": "data_process",
      "description": "a type definition for etl load script",
      "typeVersion": "1.0",
      "attributeDefs": [
        {
          "name": "configuration_file",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 1,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": false
        },
        {
          "name": "configuration_param",
          "typeName": "string",
          "isOptional": true,
          "cardinality": "SINGLE",
          "valuesMinCount": 1,
          "valuesMaxCount": 1,
          "isUnique": false,
          "isIndexable": true
        },
        {
          "name": "run_user",
          "typeName": "string",
          "isOptional": false,
          "cardinality": "SINGLE",
          "valuesMinCount": 1,
          "valuesMaxCount": 1,
          "isUnique": true,
          "isIndexable": true
        }
      ]
    }
  ]
}